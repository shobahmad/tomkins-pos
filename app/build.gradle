apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.erebor.tomkins.pos"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        multiDexEnabled true
        versionCode 5
        versionName "1.5.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion = rootProject.buildToolVersion
    buildTypes.each {
        it.buildConfigField 'String', 'HOSTNAME', HostName
        it.buildConfigField 'String', 'SALTKEY', SaltKey
    }
    dataBinding {
        enabled true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "com.android.support:multidex:$multiDexVersion"
    implementation "com.google.guava:guava:$guavaVersion"

    // Material Design
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.wdullaer:materialdatetimepicker:2.3.0"
    implementation 'com.balysv:material-ripple:1.0.2'                  // ripple effect

    // Spinkit
    implementation "com.github.ybq:Android-SpinKit:$spinKitVersion"


    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingVersion"

    // RxJava2
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava2Version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxjava2RetrofitVersion"

    // Dagger2
    implementation "com.google.dagger:dagger:$dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger2Version"
    compileOnly "javax.annotation:jsr250-api:$javaxVersion"
    implementation "javax.inject:javax.inject:1"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$liveDataVersion"
    implementation "androidx.lifecycle:lifecycle-runtime:$liveDataVersion"
    annotationProcessor "androidx.lifecycle:lifecycle-common-java8:$liveDataVersion"

    implementation 'com.readystatesoftware.chuck:library:1.1.0'

    //Workers
    implementation "androidx.work:work-runtime:$workerVersion"

    // Preference
    implementation "androidx.preference:preference:$preferenceVersion"

    // Sliding up panel
    implementation "com.sothree.slidinguppanel:library:$slidingUpPanelVersion"

    // Lottie Animation
    implementation "com.airbnb.android:lottie:$lottieVersion"

    // Password input
    implementation "com.github.scottyab:showhidepasswordedittext:$passwordEditVersion"

    // Scanner
    implementation "me.dm7.barcodescanner:zxing:$zxingVersion"
    implementation "com.google.android.gms:play-services-vision:$visionVersion"

    // Glide Image
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    // Testing library
    testImplementation "junit:junit:$jUnitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver"
    testImplementation "androidx.arch.core:core-testing:$archCoreTestingVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"

    // Android Testing library
    androidTestImplementation "androidx.test:core:$coreTestingVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archCoreTestingVersion"
    androidTestImplementation "androidx.test:runner:$androidXTestVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$esspressoVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "androidx.work:work-testing:$workerVersion"
}
